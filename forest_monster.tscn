[gd_scene load_steps=23 format=3 uid="uid://devxyhnuigd0c"]

[ext_resource type="Texture2D" uid="uid://bmn0cm8b48wjj" path="res://textures/Forest Monster idle_0001.png" id="1_g6q7d"]
[ext_resource type="Texture2D" uid="uid://bquwd8cgiosd" path="res://textures/Forest Monster idle_0002.png" id="2_uw6a2"]
[ext_resource type="Texture2D" uid="uid://c4kmg3brwxp4v" path="res://textures/Forest Monster idle_0003.png" id="3_hd58r"]
[ext_resource type="Texture2D" uid="uid://ch30u5faqvyl8" path="res://textures/Forest Monster idle_0004.png" id="4_hru4h"]
[ext_resource type="Script" uid="uid://dvk84opxjevpp" path="res://scripts/animated_sprite_2d.gd" id="5_hd58r"]
[ext_resource type="Texture2D" uid="uid://df3vk2i7ic7da" path="res://textures/glow.png" id="5_uw6a2"]
[ext_resource type="Script" uid="uid://bwg3rj6pptpi5" path="res://scripts/health_bar.gd" id="7_hru4h"]

[sub_resource type="CanvasItemMaterial" id="CanvasItemMaterial_ei405"]
light_mode = 1

[sub_resource type="GDScript" id="GDScript_hqns4"]
resource_name = "Forest Monster Logic"
script/source = "extends CharacterBody2D
var health: float = 30
const SPEED: int = 100
var facing: float = 0
var dir: float
@export var target: Node = null
@onready var nav: NavigationAgent2D = $NavigationAgent2D
@onready var AniPlay: AnimationPlayer = $AnimationPlayer
@onready var movement: AnimationPlayer = $MovePlayer
@onready var attack: AnimationPlayer = $AttackPlayer
var startpos: Vector2
var intent: String = \"idle\"
var enemy: String = \"Forest Monster\"
# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	$Timer.connect(\"timeout\",Attack1)
	$AnimatedSprite2D.play(\"idle\")
	$MovePlayer.play(\"idle\")
	startpos = global_position
	var e = VisibleOnScreenNotifier2D.new()
	e.name = \"e\"
	add_child(e)
	await get_tree().create_timer(randf_range(0, 1)).timeout
	$\"Pathfinder Interval\".start()
# Called every frame. 'delta' is the elapsed time since the previous frame.

func _physics_process(_delta: float) -> void:
	if $e.is_on_screen() or !nav.is_navigation_finished():
		match intent:
			\"idle\":
				nav.target_position = startpos
				if !nav.is_navigation_finished():
					velocity = to_local(nav.get_next_path_position()).normalized() * SPEED
					animations()
				else:
					velocity = Vector2.ZERO
					if !movement.current_animation == \"idle\":
						movement.play(\"idle\")
				$Timer.start()
			\"approach\":
				animations()
				$AnimatedSprite2D.offset *= Vector2(0.95, 0.95)
				if !nav.is_navigation_finished():
					velocity = to_local(nav.get_next_path_position()).normalized() * SPEED
				else:
						velocity = Vector2.ZERO
		if health <= 0:
			health = 0
			intent = \"dead\"
			$CollisionShape2D.disabled = true
			$HealthBar/HealthBar.visible = false
			$Timer.stop()
			AniPlay.stop()
			attack.stop()
			movement.play(\"death\")
			await get_tree().create_timer(2).timeout
			queue_free()
		move_and_slide()

func animations():
	if not (velocity.x / abs(velocity.x)) == facing:
		facing = (velocity.x) / (abs(velocity.x))
		match facing:
			1.0:
				movement.play(\"move_right\")
			-1.0:
				movement.play(\"move_left\")

func Attack1():
	if $e.is_on_screen():
		var attack1 = $\"../Attack 1\".duplicate()
		attack1.initialSpeed = ($\"../Wizard\".global_position - self.global_position).normalized() * 750
		attack1.position = position + Vector2(0, -22)
		attack1.facing = facing
		attack1.look_at($\"../Wizard\".global_position)
		add_sibling(attack1)
		attack.play(\"attack\")



func damage(damage):
	health -= damage
	AniPlay.queue(\"damaged\")
	var tween = get_tree().create_tween()
	tween.tween_property($HealthBar/HealthBar, \"scale\", Vector2($HealthBar/HealthBar.scale - Vector2(0.34, 0)), 0.25).set_trans(Tween.TRANS_SINE)
	if intent == \"idle\":
		intent = \"approach\"
		attack.play(\"agro\")

func _on_pathfinder_interval_timeout() -> void:
	if $e.is_on_screen() or !nav.is_navigation_finished():
		if !target:
			target = $\"../Wizard\"
		$RayCast2D.target_position = to_local(target.position)
		if intent == \"approach\":
			nav.target_position = target.global_position
			$\"Pathfinder Interval\".start()
			if $RayCast2D.is_colliding():
				$Timer.start()
			if abs($RayCast2D.target_position.x) + abs($RayCast2D.target_position.y) > 2000:
				intent = \"idle\"
			else:
				if $RayCast2D.is_colliding and ($RayCast2D.target_position.x) + abs($RayCast2D.target_position.y) > 1600:
					intent = \"idle\"
		else:
			await get_tree().create_timer(0.1).timeout
			if not abs($RayCast2D.target_position.x) + abs($RayCast2D.target_position.y) > 1000 and not $RayCast2D.is_colliding() and not intent == \"dead\":
				intent = \"approach\"
				attack.play(\"agro\")
"

[sub_resource type="SpriteFrames" id="SpriteFrames_hqns4"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("1_g6q7d")
}, {
"duration": 1.0,
"texture": ExtResource("2_uw6a2")
}, {
"duration": 1.0,
"texture": ExtResource("3_hd58r")
}, {
"duration": 1.0,
"texture": ExtResource("4_hru4h")
}],
"loop": true,
"name": &"idle",
"speed": 5.0
}]

[sub_resource type="CircleShape2D" id="CircleShape2D_x0ka3"]
radius = 30.0

[sub_resource type="Animation" id="Animation_x0ka3"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AnimatedSprite2D:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("AnimatedSprite2D:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0, 0)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("AnimatedSprite2D:rotation")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("AnimatedSprite2D:scale")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1.8, 1.8)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("AnimatedSprite2D/PointLight2D:modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("AnimatedSprite2D:offset")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0, 0)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("AnimatedSprite2D/PointLight2D/Sprite2D:modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(0.409833, 0.994182, 0.402968, 0.52549)]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("HealthBar:scale")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1, 1)]
}

[sub_resource type="Animation" id="Animation_1fr6y"]
resource_name = "agro"
length = 0.75
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AnimatedSprite2D:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.733333),
"transitions": PackedFloat32Array(1, 3.24901, 1),
"update": 0,
"values": [Vector2(1.8, 1.8), Vector2(1.8, 2.5), Vector2(1.8, 1.8)]
}

[sub_resource type="Animation" id="Animation_0h7mo"]
resource_name = "attack"
length = 0.3
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AnimatedSprite2D:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.0333333, 0.233333),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(1.8, 1.8), Vector2(1.7, 2.04), Vector2(1.8, 1.8)]
}

[sub_resource type="Animation" id="Animation_fs4d3"]
resource_name = "damaged"
length = 0.33
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AnimatedSprite2D:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.33),
"transitions": PackedFloat32Array(0.353553, 1),
"update": 0,
"values": [Color(1, 0.0871313, 0.0901363, 1), Color(1, 1, 1, 1)]
}

[sub_resource type="Animation" id="Animation_ta5nu"]
resource_name = "death"
length = 2.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AnimatedSprite2D:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.133333, 0.366667, 0.633333, 1.56667),
"transitions": PackedFloat32Array(0.189465, 0.25, 1, 0.366022, 1),
"update": 0,
"values": [Vector2(1.8, 1.8), Vector2(0.5, 0.5), Vector2(1.8, 1.8), Vector2(1.8, 1.8), Vector2(-0.69, 1.8)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("AnimatedSprite2D:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.366667, 1.16667, 1.66667),
"transitions": PackedFloat32Array(0.435275, 2.07053, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 0.0871313, 0.0901363, 1), Color(0, 0, 0, 1), Color(0, 0, 0, 0)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("AnimatedSprite2D:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0.633333, 1.56667),
"transitions": PackedFloat32Array(2.07053, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, 1000)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("AnimatedSprite2D:rotation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.3),
"transitions": PackedFloat32Array(0.392292, 2.07053),
"update": 0,
"values": [0.0, 3.14159]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("HealthBar:scale")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 0.633333, 1.56667),
"transitions": PackedFloat32Array(0.34151, 0.366022, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1, 1), Vector2(1, 0)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("HealthBar:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0, 0.633333, 1.53333),
"transitions": PackedFloat32Array(0.392292, 2.07053, 1),
"update": 0,
"values": [Vector2(-26, -35), Vector2(-35, 20), Vector2(-35, 1000)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("HealthBar:rotation")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0, 0.266667),
"transitions": PackedFloat32Array(0.406126, 1),
"update": 0,
"values": [0.0, -1.5708]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("AnimatedSprite2D/PointLight2D:modulate")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0, 0.633333),
"transitions": PackedFloat32Array(2.21914, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("AnimatedSprite2D/PointLight2D/Sprite2D:modulate")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0, 0.633333),
"transitions": PackedFloat32Array(2.21914, 1),
"update": 0,
"values": [Color(0.409833, 0.994182, 0.402968, 0.52549), Color(0.411765, 0.996078, 0.403922, 0)]
}

[sub_resource type="Animation" id="Animation_7vxoj"]
resource_name = "idle"
length = 3.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AnimatedSprite2D:offset")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1.53333, 2.96667),
"transitions": PackedFloat32Array(-2, -2, 2.21914),
"update": 0,
"values": [Vector2(0, 0), Vector2(0, -10), Vector2(0, 0)]
}

[sub_resource type="Animation" id="Animation_nr8wp"]
resource_name = "move_left"
length = 0.66
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AnimatedSprite2D:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.66),
"transitions": PackedFloat32Array(0.406126, 0.277393),
"update": 0,
"values": [0.0, -0.0977384]
}

[sub_resource type="Animation" id="Animation_d2bti"]
resource_name = "move_right"
length = 0.66
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("AnimatedSprite2D:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.66),
"transitions": PackedFloat32Array(0.406126, 0.277393),
"update": 0,
"values": [0.0, 0.0977384]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_d2bti"]
_data = {
&"RESET": SubResource("Animation_x0ka3"),
&"agro": SubResource("Animation_1fr6y"),
&"attack": SubResource("Animation_0h7mo"),
&"damaged": SubResource("Animation_fs4d3"),
&"death": SubResource("Animation_ta5nu"),
&"idle": SubResource("Animation_7vxoj"),
&"move_left": SubResource("Animation_nr8wp"),
&"move_right": SubResource("Animation_d2bti")
}

[sub_resource type="CanvasItemMaterial" id="CanvasItemMaterial_uw6a2"]
light_mode = 1

[sub_resource type="CanvasItemMaterial" id="CanvasItemMaterial_hd58r"]
light_mode = 1

[node name="Forest Monster" type="CharacterBody2D"]
light_mask = 0
material = SubResource("CanvasItemMaterial_ei405")
collision_layer = 2
collision_mask = 2
motion_mode = 1
wall_min_slide_angle = 0.0
platform_on_leave = 2
script = SubResource("GDScript_hqns4")

[node name="Timer" type="Timer" parent="."]

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
physics_interpolation_mode = 1
light_mask = 0
use_parent_material = true
scale = Vector2(1.8, 1.8)
sprite_frames = SubResource("SpriteFrames_hqns4")
animation = &"idle"
script = ExtResource("5_hd58r")

[node name="PointLight2D" type="PointLight2D" parent="AnimatedSprite2D"]
position = Vector2(0, 5.55556)
color = Color(0.27451, 0.984314, 0.745098, 1)
energy = 0.9
texture = ExtResource("5_uw6a2")

[node name="Sprite2D" type="Sprite2D" parent="AnimatedSprite2D/PointLight2D"]
modulate = Color(0.409833, 0.994182, 0.402968, 0.52549)
z_index = -1
scale = Vector2(0.5, 0.5)
texture = ExtResource("5_uw6a2")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
visible = false
shape = SubResource("CircleShape2D_x0ka3")

[node name="RayCast2D" type="RayCast2D" parent="."]
position = Vector2(0, -25)
collision_mask = 2

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_d2bti")
}
blend_times = [&"idle", &"RESET", 0.25, &"idle", &"attack", 0.25, &"idle", &"damaged", 0.25, &"idle", &"death", 0.25, &"idle", &"idle", 0.25, &"idle", &"move_left", 0.25, &"idle", &"move_right", 0.25]

[node name="AttackPlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_d2bti")
}
blend_times = [&"idle", &"RESET", 0.25, &"idle", &"attack", 0.25, &"idle", &"damaged", 0.25, &"idle", &"death", 0.25, &"idle", &"idle", 0.25, &"idle", &"move_left", 0.25, &"idle", &"move_right", 0.25]

[node name="MovePlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_d2bti")
}
playback_default_blend_time = 0.25
blend_times = [&"idle", &"RESET", 0.25, &"idle", &"attack", 0.25, &"idle", &"damaged", 0.25, &"idle", &"death", 0.25, &"idle", &"idle", 0.25, &"idle", &"move_left", 0.25, &"idle", &"move_right", 0.25]

[node name="NavigationAgent2D" type="NavigationAgent2D" parent="."]
process_thread_group = 2
process_thread_group_order = 0
process_thread_messages = 0
path_desired_distance = 75.0
target_desired_distance = 75.0
path_metadata_flags = 0
avoidance_enabled = true
radius = 100.0
neighbor_distance = 1000.0
avoidance_layers = 2
avoidance_mask = 2
debug_path_custom_color = Color(1, 1, 0, 1)

[node name="HealthBar" type="ColorRect" parent="."]
light_mask = 2
z_index = 100
texture_filter = 1
material = SubResource("CanvasItemMaterial_uw6a2")
offset_left = -26.0
offset_top = -35.0
offset_right = 30.0
offset_bottom = -32.32
color = Color(0.560784, 0.176471, 0, 1)
script = ExtResource("7_hru4h")
metadata/_edit_use_anchors_ = true

[node name="HealthBar" type="ColorRect" parent="HealthBar"]
light_mask = 2
z_index = 1
texture_filter = 1
material = SubResource("CanvasItemMaterial_hd58r")
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
scale = Vector2(1, 1.515)
color = Color(0.560784, 1, 0, 1)
metadata/_edit_use_anchors_ = true

[node name="Pathfinder Interval" type="Timer" parent="."]
wait_time = 0.3

[connection signal="timeout" from="Timer" to="." method="_on_timer_timeout"]
[connection signal="timeout" from="Pathfinder Interval" to="." method="_on_pathfinder_interval_timeout"]
